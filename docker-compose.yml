version: '3.9'

services:

  #postgres:
   # container_name: postgres
   # build: ./postgres
   # restart: always
   # volumes:
   #   - ./postgres/data:/var/lib/postgresql/
   # ports:
   #   - "5432:5432"
   # expose:
   #   - 5432
   # networks:
   #   - asgard
   #   - monitor
   # healthcheck:
   #   test: "pg_isready -h postgre"
   #   interval: 10s
   #   timeout: 5s
   #   retries: 5
   # env_file:
   #   - ./.env.dev

  backend:
    build: ./backend
    restart: always
    volumes:
      - ./backend/:/app/
    expose:
      - 80
    ports:
      - "8080:80"
    depends_on:
      - postgres # condition: service_healthy
    networks:
      - thor
      - asgard
      - loky
      - monitor
    env_file:
      - ./.env.dev
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    healthcheck:
      test: curl -f http://localhost/api/v1/healthcheck/ || exit 1
      interval: 5m30s
      timeout: 30s
      retries: 3
      start_period: 30s

  frontend:
    build: ./frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - asgard

  redis:
    image: redis:latest
    restart: always
    env_file:
      - ./.env.dev
    networks:
      - loky
    expose:
      - 6379

networks:
  asgard:
  thor:
  loky:
  monitor:


volumes:
  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./monitoring/prometheus/data
  grafana_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./monitoring/grafana/data
